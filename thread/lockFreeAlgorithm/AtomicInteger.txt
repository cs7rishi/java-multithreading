########## Atomic Integer Pros & Cons #############

> Pros
    a. Simplicity
    b. No need to for locks and sychronization
    c. No race conditions or data races

> Cons
    a. Only the operation itself is atomic
    b. There's still race conditions between 2 separate atomic operations

    ex:
        atomicInteger.incrementAndget();
        atomicInteger.addAndGet(-5) // race condition


::::::::::::::::: Summary :::::::::::::::::::

> AtomicInteger is a great tool for concurrent counting without the complexity of using a lock
> AtomicInteger should be used only when atomic operations are needed
> It's on par and sometimes more performant than a regular integer with a lock as protection

> If long use the AtomicLong, which provides the same capability as AtomicInteger.
>Similarly AtomicBoolean provide atomic operation on boolean values
